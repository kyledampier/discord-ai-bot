{
  "version": "5",
  "dialect": "sqlite",
  "id": "4fc47fc8-1c68-4252-8045-fa17b2f1bc30",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "tables": {
    "answers": {
      "name": "answers",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": true
        },
        "question_id": {
          "name": "question_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "answer": {
          "name": "answer",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "correct": {
          "name": "correct",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false,
          "default": false
        }
      },
      "indexes": {
        "answers_question_idx": {
          "name": "answers_question_idx",
          "columns": [
            "question_id"
          ],
          "isUnique": false
        }
      },
      "foreignKeys": {
        "answers_question_id_questions_id_fk": {
          "name": "answers_question_id_questions_id_fk",
          "tableFrom": "answers",
          "tableTo": "questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "answer_logs": {
      "name": "answer_logs",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": true
        },
        "challenge_id": {
          "name": "challenge_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "question_id": {
          "name": "question_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "question_number": {
          "name": "question_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "guild_id": {
          "name": "guild_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "answer_id": {
          "name": "answer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "correct": {
          "name": "correct",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "answer_logs_challenge_id_challenges_id_fk": {
          "name": "answer_logs_challenge_id_challenges_id_fk",
          "tableFrom": "answer_logs",
          "tableTo": "challenges",
          "columnsFrom": [
            "challenge_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "answer_logs_question_id_questions_id_fk": {
          "name": "answer_logs_question_id_questions_id_fk",
          "tableFrom": "answer_logs",
          "tableTo": "questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "answer_logs_guild_id_discord_guilds_id_fk": {
          "name": "answer_logs_guild_id_discord_guilds_id_fk",
          "tableFrom": "answer_logs",
          "tableTo": "discord_guilds",
          "columnsFrom": [
            "guild_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "answer_logs_user_id_discord_users_id_fk": {
          "name": "answer_logs_user_id_discord_users_id_fk",
          "tableFrom": "answer_logs",
          "tableTo": "discord_users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "answer_logs_answer_id_answers_id_fk": {
          "name": "answer_logs_answer_id_answers_id_fk",
          "tableFrom": "answer_logs",
          "tableTo": "answers",
          "columnsFrom": [
            "answer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "balances": {
      "name": "balances",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": true
        },
        "guild_id": {
          "name": "guild_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "amount": {
          "name": "amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false,
          "default": 0
        },
        "last_monthly": {
          "name": "last_monthly",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "last_weekly": {
          "name": "last_weekly",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "last_daily": {
          "name": "last_daily",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "last_hourly": {
          "name": "last_hourly",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        }
      },
      "indexes": {
        "balances_user_idx": {
          "name": "balances_user_idx",
          "columns": [
            "guild_id",
            "user_id"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {
        "balances_guild_id_discord_guilds_id_fk": {
          "name": "balances_guild_id_discord_guilds_id_fk",
          "tableFrom": "balances",
          "tableTo": "discord_guilds",
          "columnsFrom": [
            "guild_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "balances_user_id_discord_users_id_fk": {
          "name": "balances_user_id_discord_users_id_fk",
          "tableFrom": "balances",
          "tableTo": "discord_users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "challenges": {
      "name": "challenges",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": true
        },
        "guild_id": {
          "name": "guild_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "initiator_id": {
          "name": "initiator_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "challenger_id": {
          "name": "challenger_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "wager": {
          "name": "wager",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "num_questions": {
          "name": "num_questions",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "current_question": {
          "name": "current_question",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false,
          "default": 0
        },
        "category": {
          "name": "category",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "timestamp": {
          "name": "timestamp",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        }
      },
      "indexes": {
        "challenges_status_idx": {
          "name": "challenges_status_idx",
          "columns": [
            "status"
          ],
          "isUnique": false
        },
        "challenges_timestamp_idx": {
          "name": "challenges_timestamp_idx",
          "columns": [
            "timestamp"
          ],
          "isUnique": false
        },
        "challenges_initiator_idx": {
          "name": "challenges_initiator_idx",
          "columns": [
            "guild_id",
            "initiator_id"
          ],
          "isUnique": false
        },
        "challenges_challenger_idx": {
          "name": "challenges_challenger_idx",
          "columns": [
            "guild_id",
            "challenger_id"
          ],
          "isUnique": false
        },
        "challenges_user_idx": {
          "name": "challenges_user_idx",
          "columns": [
            "guild_id",
            "initiator_id",
            "challenger_id"
          ],
          "isUnique": false
        }
      },
      "foreignKeys": {
        "challenges_guild_id_discord_guilds_id_fk": {
          "name": "challenges_guild_id_discord_guilds_id_fk",
          "tableFrom": "challenges",
          "tableTo": "discord_guilds",
          "columnsFrom": [
            "guild_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "challenges_initiator_id_discord_users_id_fk": {
          "name": "challenges_initiator_id_discord_users_id_fk",
          "tableFrom": "challenges",
          "tableTo": "discord_users",
          "columnsFrom": [
            "initiator_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "challenges_challenger_id_discord_users_id_fk": {
          "name": "challenges_challenger_id_discord_users_id_fk",
          "tableFrom": "challenges",
          "tableTo": "discord_users",
          "columnsFrom": [
            "challenger_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "challenges_category_question_categories_id_fk": {
          "name": "challenges_category_question_categories_id_fk",
          "tableFrom": "challenges",
          "tableTo": "question_categories",
          "columnsFrom": [
            "category"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "discord_guilds": {
      "name": "discord_guilds",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": false
        },
        "locale": {
          "name": "locale",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "app_permissions": {
          "name": "app_permissions",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "discord_interactions": {
      "name": "discord_interactions",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": false
        },
        "guild_id": {
          "name": "guild_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "application_id": {
          "name": "application_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "version": {
          "name": "version",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "channel_id": {
          "name": "channel_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "channel_name": {
          "name": "channel_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "nsfw": {
          "name": "nsfw",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false,
          "default": false
        },
        "data": {
          "name": "data",
          "type": "blob",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "timestamp": {
          "name": "timestamp",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        }
      },
      "indexes": {
        "interactions_idx": {
          "name": "interactions_idx",
          "columns": [
            "id"
          ],
          "isUnique": true
        },
        "interactions_user_idx": {
          "name": "interactions_user_idx",
          "columns": [
            "guild_id",
            "user_id"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {
        "discord_interactions_guild_id_discord_guilds_id_fk": {
          "name": "discord_interactions_guild_id_discord_guilds_id_fk",
          "tableFrom": "discord_interactions",
          "tableTo": "discord_guilds",
          "columnsFrom": [
            "guild_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "discord_interactions_user_id_discord_users_id_fk": {
          "name": "discord_interactions_user_id_discord_users_id_fk",
          "tableFrom": "discord_interactions",
          "tableTo": "discord_users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "questions": {
      "name": "questions",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": true
        },
        "category": {
          "name": "category",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "difficulty": {
          "name": "difficulty",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "question": {
          "name": "question",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        }
      },
      "indexes": {
        "questions_category_idx": {
          "name": "questions_category_idx",
          "columns": [
            "category"
          ],
          "isUnique": false
        },
        "questions_type_idx": {
          "name": "questions_type_idx",
          "columns": [
            "type"
          ],
          "isUnique": false
        },
        "questions_question_idx": {
          "name": "questions_question_idx",
          "columns": [
            "question"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {
        "questions_category_question_categories_id_fk": {
          "name": "questions_category_question_categories_id_fk",
          "tableFrom": "questions",
          "tableTo": "question_categories",
          "columnsFrom": [
            "category"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "question_categories": {
      "name": "question_categories",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        }
      },
      "indexes": {
        "category_names_idx": {
          "name": "category_names_idx",
          "columns": [
            "name"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "question_logs": {
      "name": "question_logs",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": true
        },
        "challenge_id": {
          "name": "challenge_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "question_number": {
          "name": "question_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "guild_id": {
          "name": "guild_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "question_id": {
          "name": "question_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "answer_id": {
          "name": "answer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "correct": {
          "name": "correct",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false,
          "default": false
        }
      },
      "indexes": {
        "question_logs_user_idx": {
          "name": "question_logs_user_idx",
          "columns": [
            "guild_id",
            "user_id"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {
        "question_logs_challenge_id_challenges_id_fk": {
          "name": "question_logs_challenge_id_challenges_id_fk",
          "tableFrom": "question_logs",
          "tableTo": "challenges",
          "columnsFrom": [
            "challenge_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "question_logs_guild_id_discord_guilds_id_fk": {
          "name": "question_logs_guild_id_discord_guilds_id_fk",
          "tableFrom": "question_logs",
          "tableTo": "discord_guilds",
          "columnsFrom": [
            "guild_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "question_logs_user_id_discord_users_id_fk": {
          "name": "question_logs_user_id_discord_users_id_fk",
          "tableFrom": "question_logs",
          "tableTo": "discord_users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "question_logs_question_id_questions_id_fk": {
          "name": "question_logs_question_id_questions_id_fk",
          "tableFrom": "question_logs",
          "tableTo": "questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "question_logs_answer_id_answers_id_fk": {
          "name": "question_logs_answer_id_answers_id_fk",
          "tableFrom": "question_logs",
          "tableTo": "answers",
          "columnsFrom": [
            "answer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "discord_users": {
      "name": "discord_users",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": false
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "discriminator": {
          "name": "discriminator",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "avatar": {
          "name": "avatar",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "global_name": {
          "name": "global_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    }
  },
  "enums": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  }
}